---
import FilterGroup from "./FilterGroup.astro";
import { Clinics, PossibleRaces } from '../lib/data';

const ClinicFilterValues = Clinics.map(c => c.name[0].toUpperCase() + c.name.substring(1));
const {
    defaultRadius
} = Astro.props
---
<ul class="filter--list">
    <FilterGroup name="Clinic" filterType="clinic" values={ClinicFilterValues} type="checkbox" />
    <FilterGroup name="Sex" filterType="sex" values={["Male", "Female", "Any"]} type="radio" />
    <FilterGroup name="Race" filterType="race" values={PossibleRaces} type="checkbox" />
    <li>
        <div id="mapControls">
            <p>Radius:</p>
            <label for="circleRadius">
                <input type="range" name="circleRadius" value={defaultRadius} id="circleRadius" max="25" min="0" step="2.5" />
                <span id="radiusAmount">{`${defaultRadius} mi.`}</span>
            </label>
        </div>
    </li>
    <li>
        <button class="btn" type="button" id="forceClear">Clear All Filters</button>
    </li>
</ul>
<style is:global>
    .filter--list {
        display: flex;
        flex-direction: column;
        gap: 1.25rem;
        list-style-type: none;
        margin-left: 0;
        padding-left: 0;
    }
    .filter--list p {
        font-size: 1.1rem;
        font-weight: 500;
        text-decoration: underline;
    }
</style>
<script>
import { emit } from "../lib/Events";

const list = document.querySelector<HTMLUListElement>('.filter--list');
const radiusInput = document.querySelector<HTMLInputElement>('#circleRadius');
const forceClear = document.querySelector<HTMLButtonElement>('#forceClear');
list.addEventListener('change', ({ target }) => {
    
    const input = target as HTMLInputElement;
    const _type = input.dataset.type;

    if (input.value === 'clear') {
        return emit('filters:clear', { type: _type, force: false });
    }
    const isCheckbox = input.type === 'checkbox';

    let value = isCheckbox ? [input.value] : input.value;

    if (isCheckbox) {
        const name = input.name;
        const inputs = Array.from(input.closest('li').querySelectorAll<HTMLInputElement>(`[name=${name}]`));
        value = inputs.filter(input => input.checked).map(input => input.value);
    }

    emit('filters:change', { type: _type, value });
}, true)

radiusInput.addEventListener('input', () => {
    const radius = radiusInput.value;
    const label = radiusInput.closest('label');
    label.querySelector<HTMLSpanElement>('span').textContent = radius + ' mi.';
    emit('circles:update', { radius });
});

forceClear.addEventListener('click', () => emit('filters:clear', { force: true }, true));

</script>