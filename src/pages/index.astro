---
import Layout from '../layouts/Layout.astro';
import RecordsList from '../components/RecordsList.astro';
import { getRecords } from '../lib/getRecords';
const possibleParam = Astro.url.searchParams.get('page');
const currPage = possibleParam === '' ? 1 : +possibleParam;
console.log(possibleParam);
const records = await getRecords(currPage);

---
<Layout title="Welcome to Astro.">
	<main>
		<span>time: {performance.now()}</span>
		<!-- https://docs.astro.build/en/recipes/build-forms/ -->
		<form enctype="multipart/form-data" method="POST">
			
			<input type="file" name="upload" id="upload" />
			<button>Submit</button>
		</form>
		<div>
			{records.length > 0 && records.map(r => <RecordsList record={r} />)}
		</div>
		{currPage > 1 && <a href={`/?page=${currPage - 1}`}>Previous Page</a>}
		<a href={`/?page=${currPage + 1}`}>Next Page</a>
	</main>
</Layout>
<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 95ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
